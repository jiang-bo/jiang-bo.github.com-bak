<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 嵌入式开发 | 非纯种程序猿]]></title>
  <link href="http://jiangbo.me/blog/categories/嵌入式开发/atom.xml" rel="self"/>
  <link href="http://jiangbo.me/"/>
  <updated>2013-01-28T15:24:58+08:00</updated>
  <id>http://jiangbo.me/</id>
  <author>
    <name><![CDATA[jiang-bo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IAR开发环境中添加头文件]]></title>
    <link href="http://jiangbo.me/blog/2009/11/16/post/"/>
    <updated>2009-11-16T00:00:00+08:00</updated>
    <id>http://jiangbo.me/blog/2009/11/16/post</id>
    <content type="html"><![CDATA[<p>&nbsp;</p>

<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt;"><span style="font-size: 10.5pt; font-family: '宋体';">今天在添加<span style="font-family: Times New Roman;">uart</span>
<span style="font-family: 宋体;">驱动时，需要向现有的</span>
<span style="font-family: Times New Roman;">uC/OS</span>
<span style="font-family: 宋体;">工程文件中添加头文件。</span>
</span>
<span style="font-size: 10.5pt; font-family: '宋体';"></span>
</p>


<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt;"><span style="font-size: 10.5pt; font-family: '宋体';">1.</span>
<span style="font-size: 10.5pt; font-family: '宋体';">直接在工程目录下新建一个目录，将<span style="font-family: Times New Roman;">uart.c</span>
<span style="font-family: 宋体;">和</span>
<span style="font-family: Times New Roman;">uart.h</span>
<span style="font-family: 宋体;">添加到该目录下，</span>
</span>
<span style="font-size: 10.5pt; font-family: '宋体';"></span>
</p>


<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt;"><span style="font-size: 10.5pt; font-family: '宋体';">2.</span>
<span style="font-size: 10.5pt; font-family: '宋体';">在工程项目上右键<span style="font-family: Times New Roman;">-&gt;add-&gt;add&nbsp;group</span>
<span style="font-family: 宋体;">，添加一个组</span>
<span style="font-family: Times New Roman;">uC-UART</span>
</span>
<span style="font-size: 10.5pt; font-family: '宋体';"></span>
</p>


<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt;"><span style="font-size: 10.5pt; font-family: '宋体';">3.</span>
<span style="font-size: 10.5pt; font-family: '宋体';">在该组上继续右键<span style="font-family: Times New Roman;">-&gt;add-&gt;add&nbsp;file</span>
<span style="font-family: 宋体;">，添加</span>
<span style="font-family: Times New Roman;">uart.c</span>
<span style="font-family: 宋体;">和</span>
<span style="font-family: Times New Roman;">uart.h</span>
</span>
<span style="font-size: 10.5pt; font-family: '宋体';"></span>
</p>


<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt; text-align: center;"><span style="font-size: 10.5pt; font-family: '宋体';"></span>
</p>


<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt;"><span style="font-size: 10.5pt; font-family: '宋体';">4.</span>
<span style="font-size: 10.5pt; font-family: '宋体';">修改<span style="font-family: Times New Roman;">includes.h</span>
<span style="font-family: 宋体;">，添加</span>
<span style="font-family: Times New Roman;">#include&nbsp;&lt;uart.h&gt;</span>
</span>
<span style="font-size: 10.5pt; font-family: '宋体';"></span>
</p>


<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt;"><span style="font-size: 10.5pt; font-family: '宋体';">5.</span>
<span style="font-size: 10.5pt; font-family: '宋体';">此时直接编译会报错说无法找到<span style="font-family: Times New Roman;">&lt;uart.h&gt;</span>
<span style="font-family: 宋体;">，还需要将上述目录添加到编译路径中，右键工程</span>
<span style="font-family: Times New Roman;">-&gt;option-&gt;C/C++&nbsp;Compiler-&gt;preprocessor</span>
<span style="font-family: 宋体;">，将</span>
<span style="font-family: Times New Roman;">uart.h</span>
<span style="font-family: 宋体;">所在路径添加到</span>
<span style="font-family: Times New Roman;">include</span>
<span style="font-family: 宋体;">路径中</span>
</span>
<span style="font-size: 10.5pt; font-family: 'Times New Roman';"></span>
</p>


<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt; text-align: center;"><span style="font-size: 10.5pt; font-family: 'Times New Roman';"></span>
</p>


<p class="p0" style="margin-bottom: 0pt; margin-top: 0pt;"><span style="font-size: 10.5pt; font-family: '宋体';">6.</span>
<span style="font-size: 10.5pt; font-family: '宋体';">重新编译，就没有错误了。</span>
<span style="font-size: 10.5pt; font-family: 'Times New Roman';"></span>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于ARM的内存重映射]]></title>
    <link href="http://jiangbo.me/blog/2009/05/25/post/"/>
    <updated>2009-05-25T00:00:00+08:00</updated>
    <id>http://jiangbo.me/blog/2009/05/25/post</id>
    <content type="html"><![CDATA[<p>先说说存储器映射：<br />所谓存储器映射，是指将开发板上不同的存储器映射到开发人员可见的4GB地址空间上，例如，假设开发板上有一个32KB的片内FLASH，16KB的片内SRAM（纯属虚构，如有雷同，纯属巧合），那么，将32KBFLASH映射到地址空间的0x00000000~0x0x00008FFF上，将16KB的SRAM映射到x40000000~0x40004fff上，这样开发者在读写0x00000000~0x00008fff内的地址时，访问的就是片内FLASH，不同开发板的映射规则是开发板厂商事先设定好的。</p>


<p><br />下面说说什么是重映射：<br />重映射分为中断向量的重映射和boot的重映射<br />首先说说中断向量重映射<br />ARM中中断向量的地址位于0x00000000~0x0000003c(每个向量占4字节，但是为了能够实现4GB范围内的任意跳转，通常在中断向量表后附加一个跳转地址空间，跳转空间占4字节，因此，总的中断向量表大小为64B,不熟悉的自己查查ARM的中断向量吧，不多说了)。注意，这里所说的0x0000000~0x0000003C指的是用户可见的4GB地址空间（也就是上面所说的存储器映射后的地址空间），真正的中断向量位于哪块存贮器的哪个地址上可不一定(不过通常都是为与片内FLASH的底部)，因此，需要将不同存储器的中断向量表映射到0x00000000~0x0000003c的地址上。另外，还有一次中断向量的映射，在用户RAM的映射模式（稍后说映射模式）下，需要将中断向量映射到静态RAM的底部(很明显，这样能够提高访问速度)。<br />下面是boot的重映射<br />这里所说的boot不是bootloader，而是厂商实现内嵌到板子中的一段代码，用于执行对FLASH的读写，擦除等任务，通常位于片内存储器上，但是不同的板子上存储器的大小不同，为了程序的兼容，通常需要将boottblock重映射到存储空间的顶端。</p>


<p>最后说一下映射模式：<br />ARM中支持4中映射模式，由存储器控制寄存器控制<br />四种模式为：<br />1.boot装载程序模式：在任何复位操作后都会执行Boot装载程序。Bootblock中中断向量映射到存储器的底端以允许处理异常，并在Boot装载过程中使用中断。<br />2.用户FLASH模式：当在存储器中识别了一个有效的用户程序标识并且Boot装载操作未被执行时，由Boot装载程序启动。中断向量没有重新映射，位于Flash的存储器底部<br />3.用户Flash：中断向量被映射到静态RAM的底部<br />4.用户外部模式：中断向量有外部存储器映射到存储空间底部。</p>


<p>大概就这些，该上课去了，全是个人揣摩，有错请轻拍:)</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[s3c2410开发日志——关于yaffs无法解压]]></title>
    <link href="http://jiangbo.me/blog/2009/05/12/post/"/>
    <updated>2009-05-12T00:00:00+08:00</updated>
    <id>http://jiangbo.me/blog/2009/05/12/post</id>
    <content type="html"><![CDATA[<p>今天终于把yaffs挂载上去了~不容易啊~~记录一下。<br />原来出现的问题：<br />mount: Mounting /dev/mtdblock/1 on /mnt/yaffs failed: No such file or directory<br />然后能够进入根文件系统cramfs中，终端输出如下：<br />BusyBox v1.00 (2005.01.20-11:59+0000) Built-in shell (ash)<br />Enter 'help' for a list of built-in commands.</p>


<p>runing /etc/profile ok<br />[/mnt/yaffs]<br />然后按照指导书上的方法将yaffs.tar.bz2通过ftp上传到目标板中，解压，出现错误如下：<br />[~/tmp]tar -jvxf yaffs.tar.bz2 -C /mnt/yaffs<br />./ad<br />./ad/s3c2410-adc.o<br />tar: Cannot create directory `./ad': Operation not permitted<br />tar: ./ad/s3c2410-adc.o: No such file or directory<br />无法在/mnt/yaffs目录下进行任何操作。</p>


<p>原因分析：<br />vivi中有两种分区格式，bon和mtd，<br />bon分区用bon part命令来分区，内核在启动的是后在bon分区里查找内核，和根文件系统，但是如果想挂载</p>


<p>yaffs系统，就必须在bon分区中指定一个mtd分区，方法是在该分区后加一个:m，例如<br />bon part 0 128K 192K 1216K 6336K:m<br />这个命令就是将最后一个分区指定为mtd分区。<br />还有一点就是，part分区的时候为每个分区指定了名字，使用vivi下载的时候需要这个名字，因此，part分区中</p>


<p>kernel，root，的起止地址要相同，否则会出现根文件系统无法下载。</p>


<p>关于bon分区和mtd分区的具体区别还不清楚，目前只知道这样可以解决困扰了三天的问题。<br />2.6内核还是移植不上来，分区也已经改了，但是还是不行，网上的一个人说可能是内核的问题，下了一个</p>


<p>2.6.22，还没来的及试。<br />基本上就这样吧</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 9.04安装arm-linux-gcc交叉编译工具]]></title>
    <link href="http://jiangbo.me/blog/2009/05/06/post/"/>
    <updated>2009-05-06T00:00:00+08:00</updated>
    <id>http://jiangbo.me/blog/2009/05/06/post</id>
    <content type="html"><![CDATA[<p>最近要开发嵌入式linux，但是手头上大多文档中介绍交叉编译环境的都是基于RedHat9的，这个版本虽说很经典，但是毕竟实在是太古老了，自己机器上本身装的是Ubuntu，因此小小的研究了一下，在ubuntu中安装交叉编译环境 arm-linux-gcc<br />下面所有yourname替换为你自己的位于/home目录下的用户名<br /><strong>首先是准本工作</strong>：<br />需要的安装包：<br />crosstool-0.43.tar.gz 可以在http://kegel.com/crosstool/crosstool-0.43.tar.gz获得<br />创建一个文件夹<br />mkdir /home/yourname/downloads也可以用mkdir ~/downloads<br />将crosstool-0.43.tar.gz复制到downloads目录下（下载完成后默认应该实在桌面上）<br /><br />另外，还有一些安装包：<br />binutils-2.16.1.tar.bz2&nbsp; <br />glibc-2.3.2.tar.bz2<br />glibc-linuxthreads-2.3.2.tar.bz2<br />gcc-3.3.6.tar.bz2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />linux-2.6.15.4.tar.bz2<br />gcc-4.1.0.tar.bz2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />linux-libc-headers-2.6.12.0.tar.bz2<br />gdb-6.5.tar.bz2<br />这些在安装过程中会自动下载，也可以自己提前下载好，放在/home/yourname/downloads下面，不过我建议提前下好，因为一会需要修改一下glibc里的一个文件。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br /><strong><br />下面是一些安装是可能遇到的问题，提前些出来，省得大家忙活半天编译到一半发现错了还得重新编译，如果你想见识一下这些问题，可以直接跳转到下面的安装过程</strong>。<br />1.安装过程中会提示缺少下面两个包<br />bison<br />flex<br />如果以前没有装过，下载安装一下（具体包名我忘记了，可以直接输入bison查看，如果没装过，会提示你可以下载哪些包安装，flex类似）<br />sudo apt-get install bison<br />sudo apt-get install flex<br />另外网上说还需要一个mm4，不过我装的时候没有提示，好象是安装flex时，解决依赖性时自动装上了。<br /><br />2.还有一个莫名其妙的错误，提示说gcc版本太旧或者未安装，但是你用sudo apt-get install gcc 的时后会发现gcc已经是最新版本了，事实上这个错误是因为gcc版本太新了。解决方法如下：<br />sudo apt-get install gcc-3.4<br />cd /usr/bin<br />sudo rm gcc<br />ln -s gcc-3.4 gcc<br /><br />3.安装是还出现了如下错误：<br />/home/xxs/crosstool-0.43/build/arm-arm9tdmi-linux-gnu/gcc-4.1.1-glibc-2.3.2/build-glibc/csu/version-info.h:1:1:&nbsp; missing terminating " character<br />系统在编译生成version.o时候发现version-info.h文件有错误<br /><br />解决方法是需要修改一个文件<br />解压glibc-2.3.2.tar.bz2<br />找到glibc-2.3.2/csu目录下的Makefile按如下修改<br />文件末尾有2处echo<br />echo<br />"/"Compiled on a $$os $$version system" /<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "on<br />`date +%Y-%m-%d`.//n/"" ;; /<br />改为：<br />echo<br />"/"Compiled on a $$os $$version system" /<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "on<br />`date +%Y-%m-%d`.////n/"" ;; /<br />echo<br />"/"Available extensions://n/"";<br />改为：<br />echo<br />"/"Available extensions:////n/""&nbsp;&nbsp;&nbsp; /<br />保存并重新压缩为glibc-2.3.2.tar.bz2 覆盖原来downloads目录下的glibc-2.3.2.tar.bz2<br /><br /><strong>解决好上面的一些小问题就可以开始安装了</strong><br /><br />1.创建一个安装目录<br />sudo mkdir /opt/crosstool<br />这是因为安装文件默认是安装到这个目录里的<br /><br />2.为你自己添加权限<br />sudo chown yourname /opt/crosstool<br /><br />3.解压crosstools-0.43.tar.gz(此时安装包应该位于/home/yourname/downloads/目录下，不是的话自己改一下)<br />tar -zvxf crosstools-0.43.tar.gz<br />进入cross目录<br />cd cross-0.43<br />可以ls一下看看里面的文件，里面有一些脚本文件，具体功能可以到http://kegel.com/crosstool上查看FAQ<br /><br />4.运行./demo-arm.sh进行安装<br />这步要注意，网上有人说需要修改脚本文件里的一些设置，我没改也装上了，不知道为什么。<br /><br />5.剩下的就等着编译安装吧，很漫长～～<br /><br /><strong>修改环境变量</strong><br />安装完成后，默认的那装目录就是开始创建的那个/opt/crosstools/<br />1.添加环境变量<br />gedit ~/.bashrc<br />在最后添加如下<br />if [ -d /opt/crosstool/gcc-4.1.0-glibc-2.3.2/arm-unknow-linux-gnu ]; then<br />&nbsp;&nbsp;&nbsp; PATH=/opt/crosstool/gcc-4.1.0-glibc-2.3.2/arm-unknow-linux-gnu/bin:$PATH<br />fi<br />就是把安装的工具bin目录添加到PATH变量中。<br />保存<br />2.source ~/.bashrc<br />3.重启终端。<br />然后可以测试一下<br />arm-unknow-linux-gnu-gcc<br />正常的话就会出现<br />arm-unknow-linux-gnu-gcc: no input files<br />说明程序能用了。<br /><br />剩下的就是继续探索～<br />革命尚未成功，同志还需努力<br /></p>

]]></content>
  </entry>
  
</feed>
